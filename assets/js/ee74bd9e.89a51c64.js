"use strict";(self.webpackChunkwebdocs=self.webpackChunkwebdocs||[]).push([[46],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>g});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function d(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=r.createContext({}),l=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=l(e.components);return r.createElement(s.Provider,{value:n},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},v=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,p=d(e,["components","mdxType","originalType","parentName"]),c=l(t),v=i,g=c["".concat(s,".").concat(v)]||c[v]||u[v]||o;return t?r.createElement(g,a(a({ref:n},p),{},{components:t})):r.createElement(g,a({ref:n},p))}));function g(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=v;var d={};for(var s in n)hasOwnProperty.call(n,s)&&(d[s]=n[s]);d.originalType=e,d[c]="string"==typeof e?e:i,a[1]=d;for(var l=2;l<o;l++)a[l]=t[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}v.displayName="MDXCreateElement"},9096:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>g,frontMatter:()=>o,metadata:()=>d,toc:()=>l});var r=t(7462),i=(t(7294),t(3905));const o={sidebar_position:12,sidebar_label:"Edit by dragging borders",description:"Long press an event and drag its borders"},a="Edit event by dragging",d={unversionedId:"guides/edit-event",id:"guides/edit-event",title:"Edit event by dragging",description:"Long press an event and drag its borders",source:"@site/docs/guides/edit-event.mdx",sourceDirName:"guides",slug:"/guides/edit-event",permalink:"/react-native-week-view/guides/edit-event",draft:!1,editUrl:"https://github.com/hoangnm/react-native-week-view/tree/master/webdocs/docs/guides/edit-event.mdx",tags:[],version:"current",sidebarPosition:12,frontMatter:{sidebar_position:12,sidebar_label:"Edit by dragging borders",description:"Long press an event and drag its borders"},sidebar:"tutorialSidebar",previous:{title:"Drag and drop events",permalink:"/react-native-week-view/guides/drag-drop"},next:{title:"Create by pressing grid",permalink:"/react-native-week-view/guides/create-event"}},s={},l=[],p=(c="CodeDemo",function(e){return console.warn("Component "+c+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.kt)("div",e)});var c;const u={toc:l},v="wrapper";function g(e){let{components:n,...o}=e;return(0,i.kt)(v,(0,r.Z)({},u,o,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"edit-event-by-dragging"},"Edit event by dragging"),(0,i.kt)("p",null,"Use the props ",(0,i.kt)("a",{parentName:"p",href:"../full-api/week-view-props#oneditevent"},(0,i.kt)("inlineCode",{parentName:"a"},"onEditEvent"))," and  ",(0,i.kt)("a",{parentName:"p",href:"../full-api/week-view-props#editingevent"},(0,i.kt)("inlineCode",{parentName:"a"},"editingEvent"))," to setup this feature."),(0,i.kt)("p",null,'The user can activate "edit-mode" by long-pressing an event, and can then drag the borders.\nAll-day events do not support the edit-mode.\nSee the following example.'),(0,i.kt)(p,{imgSrc:t(1977).Z,mdxType:"CodeDemo"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="Edit events"',title:'"Edit','events"':!0},"const EDIT_EVENT_CONFIG = {\n  top: true,\n  bottom: true,\n  left: true,\n  right: true,\n};\n\nconst eventsWithUpdate = (prevEvents, payload) => {\n  // Just an example reducer, you'll probably use your own\n  const {event, newStartDate, newEndDate} = payload;\n  return [\n    ...prevEvents.filter(e => e.id !== event.id),\n    {\n      ...event,\n      startDate: newStartDate,\n      endDate: newEndDate,\n    },\n  ];\n};\n\nconst MyComponent = () => {\n  const [events, updateEvent] = useReducer(eventsWithUpdate, []);\n\n  const onEditEvent = (event, newStartDate, newEndDate) => {\n    // Here you must update the event in your DB with the new date and time\n    updateEvent({event, newStartDate, newEndDate});\n  };\n\n  // You must store the event being edited\n  const [editingEventId, setEditEvent] = useState(null);\n\n  // Then you choose when to enable/disable edit mode\n  const handleLongPressEvent = event => {\n    if (editingEventId == null) {\n      // e.g. long-pressing the event enables editing mode\n      setEditEvent(event.id);\n    } else {\n      setEditEvent(null);\n    }\n  };\n\n  const handlePressEvent = event => {\n    if (editingEventId != null) {\n      // e.g. pressing the event disables editing mode\n      setEditEvent(null);\n      return;\n    }\n\n    // default action\n    console.log(`Event press ${event.id}`);\n  };\n\n  const handleGridPress = (event, startHour, date) => {\n    if (editingEventId != null) {\n      // e.g. pressing the grid disables editing mode\n      setEditEvent(null);\n      return;\n    }\n\n    console.log(`Grid press: ${date}`);\n  };\n\n  return (\n    <WeekView\n      events={events}\n      onEventPress={handlePressEvent}\n      onEventLongPress={handleLongPressEvent}\n      onGridClick={handleGridPress}\n      editingEvent={editingEventId}\n      onEditEvent={onEditEvent}\n      editEventConfig={EDIT_EVENT_CONFIG}\n    />\n  );\n}\n"))))}g.isMDXComponent=!0},1977:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/edit-mode-99b93bf8a42b16168501d72f7fb4a151.gif"}}]);